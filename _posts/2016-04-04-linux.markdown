---
layout: post
title:  "linux"
date:   2016-04-04 21:35:35 +0800
categories: command
---

#### 用户权限

```
user添加到groupA用户组
usermod -aG groupA user

锁定newuser1
usermod -L newuser1

解除对newuser1的锁定
usermod -U newuser1

显示文件最后5行内容
tail -n 5 test.log

循环查看文件内容
tail -f test.log

查看特定行内容
sed -n 5p output.txt

添加用户
sudo adduser user1

删除用户
sudo userdel username

添加用户到sudo组
adduser username sudo

追加用户到sudo组
sudo  usermod -aG sudo username

将用户从sudo组删除，并添加到其他组
sudo usermod -G 用户组名  用户名

添加环境变量
export PATH="/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:$PATH"

改变文件拥有者和群组
chown root: log2012.log

查看用户所在组
groups user1

```

#### ubuntu 软件管理
```
# list the installed software packages on your machine 
sudo apt list --installed | grep -i gnome

# 清理安装gnome时候留下的缓存程序软件包
apt-get clean

# 删除gnome的相关配置文件
apt-get purge gnome

# 卸载掉gnome
sudo apt-get remove gnome
```

#### centos 系统命令

```
sudo systemctl start mysql
```

#### grep 命令

```
find . -name "*.php" | xargs grep

只输出文件中匹配到的部分 -o
grep -o 'matchcontent=[]'
```

#### Find Linux Files by Name or Extension
```
find . -name "*.err"
```

#### finding out where a program is located
```
which firefox
```

#### 网络ip设置

```
ifconfig eth0 up #启动以太网卡

sudo /etc/init.d/networking restart

route -n #查看所有路由

ifconfig eh0 0.0.0.0 #去除IP地址

ip addr add 目的/网关 dev eth0 #添加ip

sudo ip route add 目的ip/netmask via 192.168.1.1 #添加路由

ping -c 4 google.com
```

#### tcpdump

```
# FILTERING BY SOURCE AND DESTINATION

tcpdump src 2.3.4.5
tcpdump dst 3.4.5.6

# FIND TRAFFIC BY IP
tcpdump host 1.2.3.4

# SHOW TRAFFIC RELATED TO A SPECIFIC PORT
tcpdump port 3389
tcpdump src port 1025

```

#### dd

```
dd if=<source file name> of=<target file name> [Options]
```

#### 文件管理
```
# 统计挂载磁盘的整体情况
df -h

# 查看当前目录每个文件夹的情况
du --max-depth=1 -h
du -sh *

# 查看硬盘情况
fdisk -l

# Size of a directory
du -sh /tmp

# Size of a file
du -h /tmp/xyz
```

#### tree
```
#Tee command is used to store and view (both at the same time) the output of any other command.

ls | tee file
```

#### 环境变量添加
```
vim .profile
export PATH=$PATH:/home/jeremie/Downloads/pycharm-community-2016.3.2/bin
source .profile
```

#### crontab
```
sudo vim /etc/crontab
#每隔两分钟执行一次脚本
2 *   * * * root   /usr/bin/python3.5 /home/edgar/auto.py > /home/edgar/auto.log
# 分 时 日 月 周 用户 命令
* * * * * user command
# 每分钟执行一次
* * * * * user command
# 每隔2小时执行一次
* */2 * * * user command (/表示频率)
# 每天8:30分执行一次
30 8 * * * user command
# 每小时的30和50分各执行一次
30,50 * * * * user command（,表示并列）
# 每个月的3号到6号的8:30执行一次
30 8 3-6 * * user command （-表示范围）
# 每个星期一的8:30执行一次
30 8 * * 1 user command （周的范围为0-7,0和7代表周日）

```

#### nohup 确保这个进程在断开 ssh 连接后依旧运行，& 让进程在后台运行
```
nohup jupyter notebook &

# 后台文件写入log
command >& file.txt(或者file.log) &
```

#### 库的软链接指令速查
```
# locate 定位库的信息  
locate libcurl.so.4  

# ls -l  查看链接  
ls -l /usr/local/lib/libcurl.so.4  

# sudo rm -rf 删除软连接  
sudo rm -rf /usr/lib/x86_64-linux-gnu/libcurl.so.4  

# sudo ln -s 重建软连接  
sudo ln -s /home/anaconda2/lib/libcurl.so.4.4.0 /home/anaconda2/lib/libcurl.so.4  

# 文件夹软连接
ln -s /opt/linux/rootfs_dir  /home/jyg/rootfs_dir

# cmake --version 使用cmake时的链接库，如果有冲突则会报错。没有冲突，会输出版本信息  
cmake --version  
```

#### 文件挂载
```
#Type this command to list the devices that are accessible on the computer:
fdisk -l
# 挂载文件
mount /dev/cdrom /mnt/cdrom
# 取消挂载
umount /mnt/cdrom
```

#### 查看图片
```
xdg-open $file
```

#### ss
```
#open
ssserver -c /etc/shadowsocks.json --log-file=/tmp/shadowsocks.log -d start
# 后台启动
ssserver -c /etc/shadowsocks/config.json -d start
# 后台停止
ssserver -c /etc/shadowsocks/config.json -d stop

# 配置文件
{
"server":"",  ##填写服务器外网ip地址，ip也可以写内网地址，只要能转发出来即可。
"server_port":8000,
"local_address":"127.0.0.1",
"local_port":1080,
"password":"",
"timeout":300,
"method":"aes-256-cfb",
"fast_open":false
}
```

#### 显卡驱动
```
# 显示显卡驱动状态
nvidia-smi

# cuda 版本
nvcc --version
```
